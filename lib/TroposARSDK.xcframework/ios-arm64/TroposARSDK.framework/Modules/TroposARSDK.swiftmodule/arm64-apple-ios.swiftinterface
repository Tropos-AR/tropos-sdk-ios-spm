// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name TroposARSDK
import Foundation
import Swift
import UnityFramework
import _Concurrency
@_hasMissingDesignatedInitializers public class EventManager {
  public func listenTo(eventName: Swift.String, action: @escaping (() -> ()))
  public func listenTo(eventName: Swift.String, action: @escaping ((Any?) -> ()))
  public func removeListeners(eventNameToRemoveOrNil: Swift.String?)
  @objc deinit
}
public enum TARError : Swift.Error {
  case apiKeyUnset
  public static func == (a: TroposARSDK.TARError, b: TroposARSDK.TARError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class TARView : UIKit.UIResponder, UIKit.UIApplicationDelegate, UnityFramework.UnityFrameworkListener, UnityFramework.NativeCallsProtocol {
  @_Concurrency.MainActor(unsafe) @objc public func onSDKUnload()
  @_Concurrency.MainActor(unsafe) public static var events: TroposARSDK.EventManager
  @_Concurrency.MainActor(unsafe) @objc public func onInitialize(_ success: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc public func onUnityStateChange(_ state: Swift.String!)
  @_Concurrency.MainActor(unsafe) @objc public func onSetTestDelegate(_ delegate: UnityFramework.TestDelegate!)
  @_Concurrency.MainActor(unsafe) public static func loadAsset(_assetId: Swift.String, _assetParams: Swift.Array<Swift.String>)
  @_Concurrency.MainActor(unsafe) public static func loadInitScene()
  @_Concurrency.MainActor(unsafe) public static func setHostMainWindow(_ hostMainWindow: UIKit.UIWindow?)
  @_Concurrency.MainActor(unsafe) public static func setLaunchinOptions(_ launchingOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]?)
  @_Concurrency.MainActor(unsafe) public static func getView() -> UIKit.UIView!
  @_Concurrency.MainActor(unsafe) public static func setAPIKey(_ apiKey: Swift.String)
  @_Concurrency.MainActor(unsafe) public static func initTAR() throws
  @_Concurrency.MainActor(unsafe) public static func hideTARView()
  @_Concurrency.MainActor(unsafe) public static func showTARView()
  @_Concurrency.MainActor(unsafe) public static func unloadTARView()
  @_Concurrency.MainActor(unsafe) public static func sendUnityMessage(_ objectName: Swift.String, methodName: Swift.String, message: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc public func unityDidUnload(_ notification: Foundation.Notification!)
  @objc override dynamic public init()
  @objc deinit
}
